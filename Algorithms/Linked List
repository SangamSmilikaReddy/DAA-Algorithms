class Node:
 def __init__(self,data):
     self.data=data
     self.next = None

class linkedlist:
    def __init__(self):
        self.head = None
    
    def is_empty(self):
        return self.head is None
    
    def append(self,data):
        new_node = Node(data)
        if self.is_empty():
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current=current.next
            current.next = new_node
            
    def preappend(self,data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node
        
    def append_at(self,ref,data):
        if self.is_empty():
            print("Cannot add at as list is empty.")
            return
        
        new_node = Node(data)         
        current = self.head
        
        while current.next:
            if current.data == ref:
                new_node.next = current.next
                current.next = new_node
                return
            current = current.next
            
        print(f"element {data} not found in list")
            
    def delete(self,data):
        if self.is_empty():
            print("Cannot delete as empty.")
            return 
        
        if self.head.data == data:
            self.head = self.head.next
            return
        
        current  = self.head
        while current.next:
            if current.next.data == data:
                current.next = current.next.next
                return
            current=current.next
            
        print(f"element {data} not found in list")
        
    def display(self):
        elements = []
        current = self.head
        while current:
            elements.append(current.data)
            current = current.next
        print("->".join(map(str,elements)))
              
              
my_list = linkedlist()

my_list.append(1)
my_list.append(2)
my_list.append(3)
my_list.append(4)
my_list.append(8)
my_list.append(6)
my_list.append(7)
my_list.preappend(0)

# Displaying the linked list
print("Original Linked List:")
my_list.display()

# Deleting an element
my_list.delete(8)

# Displaying the linked list after deletion
print("\nLinked List after Deletion:")
my_list.display()


my_list.append_at(4,5)

my_list.display()